From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bjarne Koll <lynxplay101@gmail.com>
Date: Fri, 17 Feb 2023 18:59:29 +0100
Subject: [PATCH] Configure mokitor Server mock as stubOnly

A recent paper patch moved the internal unit tests to mokito, allowing
deep mocking to easily setup a mocked server instance.
While this change is useful, the server's Server#getItemFactory methods
is one of the hottest paths during unit testing, being called numerous
times by material tests.
As mokito mocks keep track of each invocation to allow for verifications
of invocations down the line, the server mock allocates a huge amount of
memory to keep track of all invocations, ultimately leading to an OOM
exception.

Paper "solved" this by increasing the tests memory to 2 GB, however KTP
will simply configure the server mock as "stubOnly", preventing any form
of post call invokation validation however also preventing the mock from
endlessly allocating memory.

diff --git a/src/test/java/io/papermc/paper/testing/DummyServer.java b/src/test/java/io/papermc/paper/testing/DummyServer.java
index 53ac8df47a2c9a84c751955fd4fbb352a3ded16b..b257a19e09b72be32b48a68ad206871f2c5bbf68 100644
--- a/src/test/java/io/papermc/paper/testing/DummyServer.java
+++ b/src/test/java/io/papermc/paper/testing/DummyServer.java
@@ -28,7 +28,7 @@ public final class DummyServer {
             return;
         }
 
-        final Server dummyServer = mock(Server.class);
+        final Server dummyServer = mock(Server.class, org.mockito.Mockito.withSettings().stubOnly());
 
         final Logger logger = Logger.getLogger(DummyServer.class.getCanonicalName());
         when(dummyServer.getLogger()).thenReturn(logger);
