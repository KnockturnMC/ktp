From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bjarne Koll <lynxplay101@gmail.com>
Date: Fri, 21 Jan 2022 04:00:28 +0100
Subject: [PATCH] Add tile state data copying

To allow plugins to clone tile states from one block to another, this
patch introduces a copy method on the tile state interface that enables
plugins to load the tile state data of an already existing tile state
into a second tile state, effectivly cloning the initial tile state.

diff --git a/src/main/java/org/bukkit/block/TileState.java b/src/main/java/org/bukkit/block/TileState.java
index 5c8517c5bcae10161952c104b6a4ff7c713bcdbd..bdb3fd0bdd4eaa6f737d1c4457ac49002dc06711 100644
--- a/src/main/java/org/bukkit/block/TileState.java
+++ b/src/main/java/org/bukkit/block/TileState.java
@@ -50,4 +50,22 @@ public interface TileState extends BlockState, PersistentDataHolder {
      */
     boolean isSnapshot();
     // Paper end
+
+    // KTP start
+
+    /**
+     * Copies the data found in the supplied tile state into this tile state, overriding any data currently represented by this tile state.
+     * While the date of the tile state is copied, the referenced block of this tile state remains intact. E.g. location and world are not affected
+     * by this copy.
+     *
+     * The data for the copy is taken from the passed instance directly, meaning no update call is required as the data is read from the in-memory
+     * mutable data the tile state represents instead of the in world tile entity.
+     *
+     * @param other the tile state to copy all the data from.
+     *
+     * @throws IllegalArgumentException if the passed tile state is not of the same type as this block state. This equality has to be checked by
+     *                                  plugins beforehand, calling this classes {@link Class#isInstance(Object)}.
+     */
+    void copyStateFrom(@org.jetbrains.annotations.NotNull TileState other);
+    // KTP end
 }
