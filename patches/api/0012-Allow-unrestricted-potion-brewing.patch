From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jatyn Stacy <jlee0964@gmail.com>
Date: Mon, 6 Feb 2023 23:08:16 -0800
Subject: [PATCH] Allow unrestricted potion brewing

Recent upstream changes allow custom potion recipes to be easily registered, however it does not satisfy a use case where the possible ingredient combinations and resulting potions are not easily defined.
This commit adds the ability to unrestrict potion brewing, so that any combination of ingredients is permitted.

diff --git a/src/main/java/org/bukkit/potion/PotionBrewer.java b/src/main/java/org/bukkit/potion/PotionBrewer.java
index 1598f34d306fb34ff7ffe7886b0d6e4abe734b6b..2b57b0bc7478f851b5170cac8a242c978675fbbb 100644
--- a/src/main/java/org/bukkit/potion/PotionBrewer.java
+++ b/src/main/java/org/bukkit/potion/PotionBrewer.java
@@ -64,4 +64,45 @@ public interface PotionBrewer {
      */
     void resetPotionMixes();
     // Paper end
+
+    // KTP start - allow unrestricted potion brewing
+
+    /**
+     * Allows the restrictions applied to potion brewing to be altered or removed completely.
+     * See {@link PotionBrewingRestriction} for information on each restriction.
+     *
+     * @param restrictions the restriction(s) to apply to potion brewing. Passing an empty collection will remove all active restrictions, making any
+     *     ingredient/input combination a valid recipe.
+     */
+    void configurePotionBrewingRestrictions(@NotNull Collection<PotionBrewingRestriction> restrictions);
+
+    /**
+     * Retrieves an immutable collection of active potion brewing restrictions.
+     * <p>
+     * The default restrictions only allow vanilla and registered {@link io.papermc.paper.potion.PotionMix} to produce a result in the brewing
+     * stand.
+     * </p>
+     *
+     * @return An immutable collection of all active potion brewing restrictions. An empty collection means there are no active restrictions and any
+     *     ingredient/input combination is valid.
+     */
+    @NotNull
+    @org.jetbrains.annotations.UnmodifiableView
+    Collection<PotionBrewingRestriction> activePotionBrewingRestrictions();
+
+    /**
+     * Flags that determine how strict brewing stands are when considering ingredients/inputs.
+     */
+    enum PotionBrewingRestriction {
+        /**
+         * Any item placed in the ingredient slot is considered a valid recipe without an associated {@link io.papermc.paper.potion.PotionMix}
+         */
+        INGREDIENT,
+        /**
+         * Any items placed in the input/potion slots are considered a valid recipe without an associated {@link io.papermc.paper.potion.PotionMix}
+         */
+        INPUTS
+    }
+
+    // KTP end
 }
