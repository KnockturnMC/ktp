From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bjarne Koll <git@lynxplay.dev>
Date: Sun, 28 Sep 2025 20:15:28 +0200
Subject: [PATCH] Per-player glowing


diff --git a/net/minecraft/server/level/ServerEntity.java b/net/minecraft/server/level/ServerEntity.java
index a0bd6f31b810fbbf29cd0c8ca5d8dc6c7a5fd7d6..81be569e7bb3b8f0face088c37547175a58a23f2 100644
--- a/net/minecraft/server/level/ServerEntity.java
+++ b/net/minecraft/server/level/ServerEntity.java
@@ -390,8 +390,42 @@ public class ServerEntity {
     private void sendDirtyEntityData() {
         SynchedEntityData entityData = this.entity.getEntityData();
         List<SynchedEntityData.DataValue<?>> list = entityData.packDirty();
-        if (list != null) {
+        sendEntityDataIf: if (list != null) { // KTP - per player glowing
             this.trackedDataValues = entityData.getNonDefaultValues();
+            // KTP start - per player glowing
+            // Early check that *should* be false for 99% of entities that do not have glow overrides
+            perPlayerGlowingIf: if (this.trackedPlayers.hasAnyGlowOverrides != 0) {
+                int sharedFlagIndex = -1;
+                byte sharedFlagValue = -1;
+                for (int i = 0; i < list.size(); i++) {
+                    final SynchedEntityData.DataValue<?> dataValue = list.get(i);
+                    if (dataValue.id() >= Entity.DATA_SHARED_FLAGS_ID.id()) {
+                        if (dataValue.id() == Entity.DATA_SHARED_FLAGS_ID.id()) {
+                            sharedFlagIndex = i;
+                            sharedFlagValue = (byte) dataValue.value();
+                        }
+                        break;
+                    }
+                }
+                if (sharedFlagIndex == -1) break perPlayerGlowingIf;
+
+                for (final var trackerData : this.trackedPlayers.effectiveData()) {
+                    if (trackerData.glowOverride == net.kyori.adventure.util.TriState.NOT_SET) {
+                        trackerData.connection.send(new ClientboundSetEntityDataPacket(this.entity.getId(), list));
+                        continue;
+                    }
+
+                    final List<SynchedEntityData.DataValue<?>> modifiedCopy = new it.unimi.dsi.fastutil.objects.ObjectArrayList<>(list);
+                    modifiedCopy.set(sharedFlagIndex, SynchedEntityData.DataValue.create(
+                        Entity.DATA_SHARED_FLAGS_ID,
+                        trackerData.patchSharedFlagForGlowOverride(sharedFlagValue)
+                    ));
+                    trackerData.connection.send(new ClientboundSetEntityDataPacket(this.entity.getId(), modifiedCopy));
+                }
+
+                break sendEntityDataIf;
+            }
+            // KTP end - per player glowing
             this.synchronizer.sendToTrackingPlayersAndSelf(new ClientboundSetEntityDataPacket(this.entity.getId(), list));
         }
 
diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index 21627a6f293f6c32ecdd15dfa95382250fddafc5..48f0878d7ee8786138d4a816faacc76890112228 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -293,7 +293,7 @@ public abstract class Entity implements SyncedDataHolder, DebugValueSource, Name
     public int invulnerableTime;
     protected boolean firstTick = true;
     protected final SynchedEntityData entityData;
-    protected static final EntityDataAccessor<Byte> DATA_SHARED_FLAGS_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BYTE);
+    public static final EntityDataAccessor<Byte> DATA_SHARED_FLAGS_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BYTE); // KTP - public
     protected static final int FLAG_ONFIRE = 0;
     private static final int FLAG_SHIFT_KEY_DOWN = 1;
     private static final int FLAG_SPRINTING = 3;
