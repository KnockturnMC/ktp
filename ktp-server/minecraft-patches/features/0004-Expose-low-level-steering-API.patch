From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bjarne Koll <git@lynxplay.dev>
Date: Mon, 26 May 2025 18:12:08 +0200
Subject: [PATCH] Expose low level steering API


diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index af5b95978ea0b2afa4a1cd7aad99b75a9b1ef374..654237281d459ec9eeb06ee9e2dac352e9daf66e 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -1485,7 +1485,12 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     }
 
     // Paper start - optimise collisions
-    private Vec3 collide(Vec3 movement) {
+    // KTP start - expose to static environment
+    public Vec3 collide(Vec3 movement) {
+        return collideStatic(movement, this.level, this.getBoundingBox(), this);
+    }
+    public static Vec3 collideStatic(Vec3 movement, Level level, AABB boundingBox, @javax.annotation.Nullable Entity entity) {
+    // KTP end - expose to static environment
         final boolean xZero = movement.x == 0.0;
         final boolean yZero = movement.y == 0.0;
         final boolean zZero = movement.z == 0.0;
@@ -1493,7 +1498,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
             return movement;
         }
 
-        final AABB currentBox = this.getBoundingBox();
+        final AABB currentBox = boundingBox; // KTP - expose to static environment
 
         final List<VoxelShape> potentialCollisionsVoxel = new ArrayList<>();
         final List<AABB> potentialCollisionsBB = new ArrayList<>();
@@ -1510,11 +1515,11 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
 
         final List<AABB> entityAABBs = new ArrayList<>();
         ca.spottedleaf.moonrise.patches.collisions.CollisionUtil.getEntityHardCollisions(
-            this.level, (Entity)(Object)this, initialCollisionBox, entityAABBs, 0, null
+            level, (Entity)(Object)entity, initialCollisionBox, entityAABBs, 0, null // KTP - expose to static environment
         );
 
         ca.spottedleaf.moonrise.patches.collisions.CollisionUtil.getCollisionsForBlocksOrWorldBorder(
-            this.level, (Entity)(Object)this, initialCollisionBox, potentialCollisionsVoxel, potentialCollisionsBB,
+            level, (Entity)(Object)entity, initialCollisionBox, potentialCollisionsVoxel, potentialCollisionsBB, // KTP - expose to static environment
             ca.spottedleaf.moonrise.patches.collisions.CollisionUtil.COLLISION_FLAG_CHECK_BORDER, null
         );
         potentialCollisionsBB.addAll(entityAABBs);
@@ -1528,7 +1533,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
 
         final double stepHeight;
 
-        if ((!collidedDownwards && !this.onGround) || (!collidedX && !collidedZ) || (stepHeight = (double)this.maxUpStep()) <= 0.0) {
+        if ((!collidedDownwards && !(entity == null ? false : entity.onGround)) || (!collidedX && !collidedZ) || (stepHeight = (double)(entity == null ? 0 : entity.maxUpStep())) <= 0.0) { // KTP - expose to static environment
             return collided;
         }
 
@@ -1542,7 +1547,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         final List<AABB> stepAABBs = entityAABBs;
 
         ca.spottedleaf.moonrise.patches.collisions.CollisionUtil.getCollisionsForBlocksOrWorldBorder(
-            this.level, (Entity)(Object)this, stepRetrievalBox, stepVoxels, stepAABBs,
+            level, (Entity)(Object)entity, stepRetrievalBox, stepVoxels, stepAABBs, // KTP - expose to static environment
             ca.spottedleaf.moonrise.patches.collisions.CollisionUtil.COLLISION_FLAG_CHECK_BORDER, null
         );
 
